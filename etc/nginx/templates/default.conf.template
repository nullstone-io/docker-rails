upstream app {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server ${WEBAPP_ADDR} fail_timeout=0;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  listen 80 default;
  root /app/public;
  index index.html index.htm;

  add_header X-XSS-Protection "1; mode=block";
  add_header Strict-Transport-Security max-age=63072000;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  try_files $uri/index.html $uri @rails;

  location ^~ /public/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location @rails {
    proxy_pass http://app;

    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  error_page 500 502 503 504 /500.html;
  error_page 404 /404.html;
  error_page 422 /422.html;
  location ~ ^/(500|404|422).html {
    root /app/public;
  }
}
